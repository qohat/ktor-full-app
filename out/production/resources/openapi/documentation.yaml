openapi: "3.0.3"
info:
  title: "Ktor Fidu App"
  description: "A JSON API that allows you to view and add customers"
  version: "1.0.0"
servers:
  - url: "http://0.0.0.0:8080"
paths:
  /people/new:
    post:
      description: "Creates a new people"
      requestBody:
        description: "A JSON object containing customer information"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewPeople"
      responses:
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                type: "string"
                format: "uuid"
        "400":
          description: "BadRequest"
          content: "The request is invalid, Malformed JSON"
        "409":
          description: "Conflict"
          content: "El usuario que intenta crear ya existe"
  /people/{id}:
    get:
      description: "Returns a people by its ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NewPeople"
components:
  schemas:
    NewPeople:
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid"
          required: "false"
        name:
          type: "string"
        lastName:
          type: "string"
        documentType:
          type: "object"
          $ref: "#/components/schemas/ValueList"
        document:
          type: "string"
        issueDocumentDate:
          type: "string"
          format: "date"
        birthday:
          type: "string"
          format: "date"
        address:
          type: "string"
          required: "false"
        sex:
          type: "object"
          $ref: "#/components/schemas/ValueList"
        gender:
          type: "object"
          $ref: "#/components/schemas/ValueList"
        phone:
          type: "integer"
          format: "int32"
        cellPhone:
          type: "integer"
          format: "int32"
        email:
          type: "string"
          format: "email"
        populationGroup:
          type: "object"
          $ref: "#/components/schemas/ValueList"
        ethnicGroup:
          type: "object"
          $ref: "#/components/schemas/ValueList"
        disability:
          type: "object"
          $ref: "#/components/schemas/ValueList"
        armedConflictVictim:
          type: "boolean"
        displaced:
          type: "boolean"
        propertyInformation:
          type: "object"
          $ref: "#/components/schemas/PropertyInformation"
        termsAcceptance:
          type: "boolean"
        createdBy:
          type: "string"
          format: "uuid"
    PropertyInformation:
      type: "object"
      properties:
        address:
          type: "string"
        name:
          type: "string"
        department:
          type: "object"
          $ref: "#/components/schemas/ValueList"
        city:
          type: "object"
          $ref: "#/components/schemas/ValueList"
        lane:
          type: "string"
        productType:
          type: "object"
          $ref: "#/components/schemas/ProductType"
        hectares:
          type: "integer"
          format: "int32"
        belongsOrganization:
          type: "boolean"
        organizationType:
          type: "object"
          $ref: "#/components/schemas/ValueList"
          required: "false"
        organizationName:
          type: "string"
          required: "false"
        nit:
          type: "string"
          required: "false"
        paymentType:
          type: "object"
          $ref: "#/components/schemas/ValueList"
        accountNumber:
          type: "string"
    ValueList:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int32"
        name:
          type: "string"
        list:
          type: "string"
        active:
          type: "boolean"
    ProductType:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int32"
        name:
          type: "string"